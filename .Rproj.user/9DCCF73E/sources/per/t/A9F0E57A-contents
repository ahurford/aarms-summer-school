---
title: "assignment 3"
output: html_document
date: "2023-03-06"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r}
require("popbio")
```
Projection matrix for exponential decrease. 
```{r}
A = matrix(c(0,2,0.3,0.1), 2,2, byrow=TRUE)
A
```
```{r}
n0 = c(10,5)
n1 = pop.projection(A, n0, 2)
n1$stage.vectors
```
```{r}
n20 = pop.projection(A, n0, 21)
n20$stage.vectors
```
```{r}
data = data.frame(time = as.numeric(colnames(n20$stage.vectors)), pop1 = n20$stage.vectors[1,], pop2 = n20$stage.vectors[2,])
data
```
```{r}
require(ggplot2)
g1 = ggplot(data, aes(x=time))+
  geom_line(aes(y=pop1), col = "red")+
  geom_line(aes(y=pop2), col = "blue")+
  ylab("number of ind. in each stage")
g1
```
in the figure above the red line represents the population between 0-1 yrs and the blue line represents the population above 1 yr and we can see the exponential decrease.As t increases, the population heads to zero.

```{r}
n1t1 = tail(data$pop1,-1)
n1t = head(data$pop1,-1)
lambda1 = 1+(n1t1 - n1t)/n1t

n2t1 = tail(data$pop2,-1)
n2t = head(data$pop2,-1)
lambda2 = 1+(n2t1 - n2t)/n2t

data2 = data.frame(time = head(data$time,-1), lambda1, lambda2)
g2 = ggplot(data=data2, aes(x=time))+
  geom_line(aes(y=lambda1), col = "red")+
  geom_line(aes(y=lambda2), col = "blue")+
  ylab("lambda_t")+
  ggtitle("per capita change in population size for each stage")
g2
```
From the figure above we can see that the lambda value converges to approximately 0.82.this is the number that is expected (by using the function below) since the  dominant eigen value below is 0.826
```{r}
n20$lambda
```
```{r}
eigen(A)$values
```
```{r}
n100 = pop.projection(A,n0,101)
n100$lambda
```
```{r}
eigen(A)$values[1]
```
```{r}
g3 = ggplot(data, aes(x=time))+
  geom_line(aes(y = pop1/(pop1+pop2)), col = "red")+
  geom_line(aes(y = pop2/(pop1+pop2)), col = "blue")+
  ylim(c(0.1, 1.0))+
  ylab("stage proportions")
g3
```
the figure above shows the stage proportions and we can see that for individual between 0-1 we have a value of approximately 0.70 and for individuals  above 1 we have a value of approximately 0.29. these values are the same as ones obtained from using the function below.
```{r}
n20$stable.stage
```
```{r}
eigen(A)
```
```{r}
eig.vec = eigen(A)$vectors[,1]
norm.eig.vec = eig.vec/sum(eig.vec)
norm.eig.vec
```

